@charset "UTF-8";

/* =======================
   Settings/Colors
   ======================= */

/* =======================
   Setting/Transitions
   ======================= */

/* =======================
   Settings/Measurements
   ======================= */

/* =======================
   The Black Tie Font is commercial software. Please do not distribute.
   ======================= */

@font-face {
  font-family: 'Black Tie';
  src: url("/fonts/black-tie/fonts/solid/BlackTie-Solid-webfont.eot?v=1.0.0");
  src: url("/fonts/black-tie/fonts/solid/BlackTie-Solid-webfont.eot?#iefix&v=1.0.0") format("embedded-opentype"), url("/fonts/black-tie/fonts/solid/BlackTie-Solid-webfont.woff2?v=1.0.0") format("woff2"), url("/fonts/black-tie/fonts/solid/BlackTie-Solid-webfont.woff?v=1.0.0") format("woff"), url("/fonts/black-tie/fonts/solid/BlackTie-Solid-webfont.ttf?v=1.0.0") format("truetype"), url("/fonts/black-tie/fonts/solid/BlackTie-Solid-webfont.svg?v=1.0.0#black_tiesolid") format("svg");
  font-weight: 900;
  font-style: normal;
}

@font-face {
  font-family: 'Black Tie';
  src: url("/fonts/black-tie/fonts/bold/BlackTie-Bold-webfont.eot?v=1.0.0");
  src: url("/fonts/black-tie/fonts/bold/BlackTie-Bold-webfont.eot?#iefix&v=1.0.0") format("embedded-opentype"), url("/fonts/black-tie/fonts/bold/BlackTie-Bold-webfont.woff2?v=1.0.0") format("woff2"), url("/fonts/black-tie/fonts/bold/BlackTie-Bold-webfont.woff?v=1.0.0") format("woff"), url("/fonts/black-tie/fonts/bold/BlackTie-Bold-webfont.ttf?v=1.0.0") format("truetype"), url("/fonts/black-tie/fonts/bold/BlackTie-Bold-webfont.svg?v=1.0.0#black_tiebold") format("svg");
  font-weight: 700;
  font-style: normal;
}

@font-face {
  font-family: 'Black Tie';
  src: url("/fonts/black-tie/fonts/regular/BlackTie-Regular-webfont.eot?v=1.0.0");
  src: url("/fonts/black-tie/fonts/regular/BlackTie-Regular-webfont.eot?#iefix&v=1.0.0") format("embedded-opentype"), url("/fonts/black-tie/fonts/regular/BlackTie-Regular-webfont.woff2?v=1.0.0") format("woff2"), url("/fonts/black-tie/fonts/regular/BlackTie-Regular-webfont.woff?v=1.0.0") format("woff"), url("/fonts/black-tie/fonts/regular/BlackTie-Regular-webfont.ttf?v=1.0.0") format("truetype"), url("/fonts/black-tie/fonts/regular/BlackTie-Regular-webfont.svg?v=1.0.0#black_tieregular") format("svg");
  font-weight: 400;
  font-style: normal;
}

@font-face {
  font-family: 'Black Tie';
  src: url("/fonts/black-tie/fonts/light/BlackTie-Light-webfont.eot?v=1.0.0");
  src: url("/fonts/black-tie/fonts/light/BlackTie-Light-webfont.eot?#iefix&v=1.0.0") format("embedded-opentype"), url("/fonts/black-tie/fonts/light/BlackTie-Light-webfont.woff2?v=1.0.0") format("woff2"), url("/fonts/black-tie/fonts/light/BlackTie-Light-webfont.woff?v=1.0.0") format("woff"), url("/fonts/black-tie/fonts/light/BlackTie-Light-webfont.ttf?v=1.0.0") format("truetype"), url("/fonts/black-tie/fonts/light/BlackTie-Light-webfont.svg?v=1.0.0#black_tielight") format("svg");
  font-weight: 200;
  font-style: normal;
}

@font-face {
  font-family: 'Font Awesome Brands';
  src: url("/fonts/black-tie/fonts/brands/FontAwesomeBrands-Regular-webfont.eot?v=1.0.0");
  src: url("/fonts/black-tie/fonts/brands/FontAwesomeBrands-Regular-webfont.eot?#iefix&v=1.0.0") format("embedded-opentype"), url("/fonts/black-tie/fonts/brands/FontAwesomeBrands-Regular-webfont.woff2?v=1.0.0") format("woff2"), url("/fonts/black-tie/fonts/brands/FontAwesomeBrands-Regular-webfont.woff?v=1.0.0") format("woff"), url("/fonts/black-tie/fonts/brands/FontAwesomeBrands-Regular-webfont.ttf?v=1.0.0") format("truetype"), url("/fonts/black-tie/fonts/brands/FontAwesomeBrands-Regular-webfont.svg?v=1.0.0#font_awesome_brandsregular") format("svg");
  font-weight: normal;
  font-style: normal;
}

.bts,
.btb,
.btr,
.btl,
.fab {
  display: inline-block;
  font: normal normal normal 14px/1 "Black Tie";
  font-size: inherit;
  vertical-align: -14.28571429%;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-transform: translate(0, 0);
          transform: translate(0, 0);
}

.bts {
  font-weight: 900;
}

.btb {
  font-weight: 700;
}

.btl {
  font-weight: 200;
}

.fab {
  font-family: "Font Awesome Brands";
}

/* makes the font 25% smaller relative to the icon container */

.bt-sm {
  font-size: .7em;
  vertical-align: baseline;
}

/* makes the font 33% larger relative to the icon container */

.bt-lg {
  font-size: 1.33333333em;
  line-height: 0.75em;
}

.bt-2x {
  font-size: 2em;
}

.bt-3x {
  font-size: 3em;
}

.bt-4x {
  font-size: 4em;
}

.bt-5x {
  font-size: 5em;
}

.bt-lg,
.bt-2x,
.bt-3x,
.bt-4x,
.bt-5x {
  vertical-align: -30%;
}

.bt-fw {
  width: 1.28571429em;
  text-align: center;
}

.bt-ul {
  padding-left: 0;
  margin-left: 2.14285714em;
  list-style-type: none;
}

.bt-ul > li {
  position: relative;
}

.bt-li {
  position: absolute;
  left: -2.14285714em;
  width: 2.14285714em;
  top: 0.14285714em;
  text-align: center;
}

.bt-li.bt-lg {
  left: -2em;
}

.bt-border {
  padding: .2em;
  border: solid 0.08em #eeeeee;
  border-radius: .1em;
}

.pull-right {
  float: right;
}

.pull-left {
  float: left;
}

.bts.pull-left,
.btb.pull-left,
.btr.pull-left,
.btl.pull-left,
.fab.pull-left {
  margin-right: .3em;
}

.bts.pull-right,
.btb.pull-right,
.btr.pull-right,
.btl.pull-right,
.fab.pull-right {
  margin-left: .3em;
}

.bt-spin {
  -webkit-animation: bt-spin 2s infinite linear;
  animation: bt-spin 2s infinite linear;
}

.bt-pulse {
  -webkit-animation: bt-spin 1s infinite steps(8);
  animation: bt-spin 1s infinite steps(8);
}

@-webkit-keyframes bt-spin {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  100% {
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg);
  }
}

@keyframes bt-spin {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  100% {
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg);
  }
}

.bt-rotate-90 {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=1);
  -webkit-transform: rotate(90deg);
  transform: rotate(90deg);
}

.bt-rotate-180 {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=2);
  -webkit-transform: rotate(180deg);
  transform: rotate(180deg);
}

.bt-rotate-270 {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);
  -webkit-transform: rotate(270deg);
  transform: rotate(270deg);
}

.bt-flip-horizontal {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1);
  -webkit-transform: scale(-1, 1);
  transform: scale(-1, 1);
}

.bt-flip-vertical {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1);
  -webkit-transform: scale(1, -1);
  transform: scale(1, -1);
}

:root .bt-rotate-90,
:root .bt-rotate-180,
:root .bt-rotate-270,
:root .bt-flip-horizontal,
:root .bt-flip-vertical {
  -webkit-filter: none;
          filter: none;
}

.bt-stack {
  position: relative;
  display: inline-block;
  width: 1.28571429em;
  height: 1em;
  line-height: 1em;
  vertical-align: baseline;
}

.bt-stack-sm {
  position: absolute;
  top: 0;
  left: 0;
  line-height: inherit;
  font-size: .5em;
}

.bt-stack-1x,
.bt-stack-sm {
  display: inline-block;
  width: 100%;
  text-align: center;
}

.bt-inverse {
  color: #ffffff;
}

/* Black Tie uses the Unicode Private Use Area (PUA) to ensure screen
   readers do not read off random characters that represent icons */

.bt-bars:before {
  content: "\F000";
}

.bt-envelope:before {
  content: "\F001";
}

.bt-search:before {
  content: "\F002";
}

.bt-search-plus:before {
  content: "\F003";
}

.bt-search-minus:before {
  content: "\F004";
}

.bt-phone:before {
  content: "\F005";
}

.bt-comment:before {
  content: "\F007";
}

.bt-commenting:before {
  content: "\F008";
}

.bt-comments:before {
  content: "\F009";
}

.bt-rss:before {
  content: "\F00A";
}

.bt-times:before {
  content: "\F00C";
}

.bt-times-circle:before {
  content: "\F00D";
}

.bt-clock:before {
  content: "\F00E";
}

.bt-star:before {
  content: "\F010";
}

.bt-star-half:before {
  content: "\F011";
}

.bt-check:before {
  content: "\F012";
}

.bt-check-circle:before {
  content: "\F013";
}

.bt-check-square:before {
  content: "\F014";
}

.bt-th:before {
  content: "\F015";
}

.bt-th-large:before {
  content: "\F016";
}

.bt-heart:before {
  content: "\F017";
}

.bt-heart-half:before {
  content: "\F018";
}

.bt-calendar:before {
  content: "\F019";
}

.bt-shopping-cart:before {
  content: "\F01A";
}

.bt-plus:before {
  content: "\F01B";
}

.bt-plus-circle:before {
  content: "\F01C";
}

.bt-plus-square:before {
  content: "\F01D";
}

.bt-pen:before {
  content: "\F01E";
}

.bt-minus:before {
  content: "\F021";
}

.bt-minus-circle:before {
  content: "\F022";
}

.bt-minus-square:before {
  content: "\F023";
}

.bt-pencil:before {
  content: "\F024";
}

.bt-edit:before {
  content: "\F025";
}

.bt-thumbs-up:before {
  content: "\F026";
}

.bt-thumbs-down:before {
  content: "\F027";
}

.bt-gear:before {
  content: "\F028";
}

.bt-trash:before {
  content: "\F029";
}

.bt-file:before {
  content: "\F02A";
}

.bt-info-circle:before {
  content: "\F02B";
}

.bt-label:before {
  content: "\F02C";
}

.bt-rocket:before {
  content: "\F02D";
}

.bt-book:before {
  content: "\F02E";
}

.bt-book-open:before {
  content: "\F02F";
}

.bt-notebook:before {
  content: "\F030";
}

.bt-camera:before {
  content: "\F031";
}

.bt-folder:before {
  content: "\F032";
}

.bt-quote-left:before {
  content: "\F036";
}

.bt-quote-right:before {
  content: "\F037";
}

.bt-eye:before {
  content: "\F038";
}

.bt-lock:before {
  content: "\F039";
}

.bt-lock-open:before {
  content: "\F03A";
}

.bt-gift:before {
  content: "\F03B";
}

.bt-spinner-clock:before {
  content: "\F03C";
}

.bt-spinner:before {
  content: "\F03D";
}

.bt-wrench:before {
  content: "\F03E";
}

.bt-cloud:before {
  content: "\F040";
}

.bt-cloud-upload:before {
  content: "\F041";
}

.bt-cloud-download:before {
  content: "\F042";
}

.bt-sync:before {
  content: "\F043";
}

.bt-question-circle:before {
  content: "\F044";
}

.bt-share:before {
  content: "\F045";
}

.bt-briefcase:before {
  content: "\F046";
}

.bt-money:before {
  content: "\F047";
}

.bt-megaphone:before {
  content: "\F048";
}

.bt-sign-in:before {
  content: "\F049";
}

.bt-sign-out:before {
  content: "\F04A";
}

.bt-film:before {
  content: "\F04B";
}

.bt-trophy:before {
  content: "\F04C";
}

.bt-code:before {
  content: "\F04D";
}

.bt-light-bulb:before {
  content: "\F04E";
}

.bt-print:before {
  content: "\F050";
}

.bt-fax:before {
  content: "\F051";
}

.bt-video:before {
  content: "\F052";
}

.bt-signal:before {
  content: "\F053";
}

.bt-sitemap:before {
  content: "\F054";
}

.bt-upload:before {
  content: "\F055";
}

.bt-download:before {
  content: "\F056";
}

.bt-key:before {
  content: "\F057";
}

.bt-mug:before {
  content: "\F058";
}

.bt-bookmark:before {
  content: "\F059";
}

.bt-flag:before {
  content: "\F05A";
}

.bt-external-link:before {
  content: "\F05B";
}

.bt-smile:before {
  content: "\F05C";
}

.bt-frown:before {
  content: "\F05D";
}

.bt-meh:before {
  content: "\F05E";
}

.bt-magic:before {
  content: "\F060";
}

.bt-bolt:before {
  content: "\F061";
}

.bt-exclamation-triangle:before {
  content: "\F062";
}

.bt-exclamation-circle:before {
  content: "\F063";
}

.bt-flask:before {
  content: "\F064";
}

.bt-music:before {
  content: "\F065";
}

.bt-push-pin:before {
  content: "\F066";
}

.bt-shield:before {
  content: "\F067";
}

.bt-sort:before {
  content: "\F068";
}

.bt-reply:before {
  content: "\F069";
}

.bt-forward:before {
  content: "\F06A";
}

.bt-reply-all:before {
  content: "\F06B";
}

.bt-forward-all:before {
  content: "\F06C";
}

.bt-bell:before {
  content: "\F06D";
}

.bt-bell-off:before {
  content: "\F06E";
}

.bt-ban:before {
  content: "\F070";
}

.bt-database:before {
  content: "\F071";
}

.bt-hard-drive:before {
  content: "\F072";
}

.bt-merge:before {
  content: "\F073";
}

.bt-fork:before {
  content: "\F074";
}

.bt-wifi:before {
  content: "\F075";
}

.bt-paper-plane:before {
  content: "\F076";
}

.bt-inbox:before {
  content: "\F077";
}

.bt-fire:before {
  content: "\F078";
}

.bt-play:before {
  content: "\F079";
}

.bt-pause:before {
  content: "\F07A";
}

.bt-stop:before {
  content: "\F08B";
}

.bt-play-circle:before {
  content: "\F07B";
}

.bt-next:before {
  content: "\F07C";
}

.bt-previous:before {
  content: "\F07D";
}

.bt-repeat:before {
  content: "\F07E";
}

.bt-fast-forward:before {
  content: "\F080";
}

.bt-fast-reverse:before {
  content: "\F081";
}

.bt-volume:before {
  content: "\F082";
}

.bt-volume-off:before {
  content: "\F083";
}

.bt-volume-up:before {
  content: "\F084";
}

.bt-volume-down:before {
  content: "\F085";
}

.bt-maximize:before {
  content: "\F086";
}

.bt-minimize:before {
  content: "\F087";
}

.bt-closed-captions:before {
  content: "\F088";
}

.bt-shuffle:before {
  content: "\F089";
}

.bt-triangle:before {
  content: "\F08A";
}

.bt-square:before {
  content: "\F08B";
}

.bt-circle:before {
  content: "\F08C";
}

.bt-hexagon:before {
  content: "\F08D";
}

.bt-octagon:before {
  content: "\F08E";
}

.bt-angle-up:before {
  content: "\F090";
}

.bt-angle-down:before {
  content: "\F091";
}

.bt-angle-left:before {
  content: "\F092";
}

.bt-angle-right:before {
  content: "\F093";
}

.bt-angles-up:before {
  content: "\F094";
}

.bt-angles-down:before {
  content: "\F095";
}

.bt-angles-left:before {
  content: "\F096";
}

.bt-angles-right:before {
  content: "\F097";
}

.bt-arrow-up:before {
  content: "\F098";
}

.bt-arrow-down:before {
  content: "\F099";
}

.bt-arrow-left:before {
  content: "\F09A";
}

.bt-arrow-right:before {
  content: "\F09B";
}

.bt-bar-chart:before {
  content: "\F09C";
}

.bt-pie-chart:before {
  content: "\F09D";
}

.bt-circle-arrow-up:before {
  content: "\F0A0";
}

.bt-circle-arrow-down:before {
  content: "\F0A1";
}

.bt-circle-arrow-left:before {
  content: "\F0A2";
}

.bt-circle-arrow-right:before {
  content: "\F0A3";
}

.bt-caret-up:before {
  content: "\F0A4";
}

.bt-caret-down:before {
  content: "\F0A5";
}

.bt-caret-left:before {
  content: "\F0A6";
}

.bt-caret-right:before {
  content: "\F0A7";
}

.bt-long-arrow-up:before {
  content: "\F0A8";
}

.bt-long-arrow-down:before {
  content: "\F0A9";
}

.bt-long-arrow-left:before {
  content: "\F0AA";
}

.bt-long-arrow-right:before {
  content: "\F0AB";
}

.bt-Bold:before {
  content: "\F0AC";
}

.bt-italic:before {
  content: "\F0AD";
}

.bt-underline:before {
  content: "\F0AE";
}

.bt-link:before {
  content: "\F0B0";
}

.bt-paper-clip:before {
  content: "\F0B1";
}

.bt-align-left:before {
  content: "\F0B2";
}

.bt-align-center:before {
  content: "\F0B3";
}

.bt-align-right:before {
  content: "\F0B4";
}

.bt-align-justify:before {
  content: "\F0B5";
}

.bt-cut:before {
  content: "\F0B6";
}

.bt-copy:before {
  content: "\F0B7";
}

.bt-paste:before {
  content: "\F0B8";
}

.bt-photo:before {
  content: "\F0B9";
}

.bt-table:before {
  content: "\F0BA";
}

.bt-ulist:before {
  content: "\F0BB";
}

.bt-olist:before {
  content: "\F0BC";
}

.bt-indent:before {
  content: "\F0BD";
}

.bt-outdent:before {
  content: "\F0BE";
}

.bt-undo:before {
  content: "\F0C0";
}

.bt-redo:before {
  content: "\F0C1";
}

.bt-sup:before {
  content: "\F0C2";
}

.bt-sub:before {
  content: "\F0C3";
}

.bt-text-size:before {
  content: "\F0C4";
}

.bt-text-color:before {
  content: "\F0C5";
}

.bt-remove-formatting:before {
  content: "\F0C6";
}

.bt-blockquote:before {
  content: "\F036";
}

.bt-globe:before {
  content: "\F0C7";
}

.bt-map:before {
  content: "\F0C8";
}

.bt-map-arrow:before {
  content: "\F0C9";
}

.bt-map-marker:before {
  content: "\F0CA";
}

.bt-map-pin:before {
  content: "\F0CB";
}

.bt-home:before {
  content: "\F0CC";
}

.bt-building:before {
  content: "\F0CD";
}

.bt-industry:before {
  content: "\F0CE";
}

.bt-desktop:before {
  content: "\F0D0";
}

.bt-laptop:before {
  content: "\F0D1";
}

.bt-tablet:before {
  content: "\F0D2";
}

.bt-mobile:before {
  content: "\F0D3";
}

.bt-tv:before {
  content: "\F0D4";
}

.bt-radio-checked:before {
  content: "\F0D5";
}

.bt-radio-unchecked:before {
  content: "\F08C";
}

.bt-checkbox-checked:before {
  content: "\F014";
}

.bt-checkbox-unchecked:before {
  content: "\F08B";
}

.bt-checkbox-intermediate:before {
  content: "\F023";
}

.bt-user:before {
  content: "\F0D6";
}

.bt-user-male:before {
  content: "\F0D6";
}

.bt-user-female:before {
  content: "\F0D7";
}

.bt-crown:before {
  content: "\F0D8";
}

.bt-credit-card:before {
  content: "\F0D9";
}

.bt-strikethrough:before {
  content: "\F0DA";
}

.bt-eject:before {
  content: "\F0DB";
}

.bt-ellipsis-h:before {
  content: "\F0DC";
}

.bt-ellipsis-v:before {
  content: "\F0DD";
}

.fab-facebook:before {
  content: "\F000";
}

.fab-facebook-alt:before {
  content: "\F001";
}

.fab-twitter:before {
  content: "\F002";
}

.fab-linkedin:before {
  content: "\F003";
}

.fab-linkedin-alt:before {
  content: "\F004";
}

.fab-instagram:before {
  content: "\F005";
}

.fab-github:before {
  content: "\F006";
}

.fab-github-alt:before {
  content: "\F007";
}

.fab-googleplus:before {
  content: "\F008";
}

.fab-googleplus-alt:before {
  content: "\F009";
}

.fab-pinterest:before {
  content: "\F00A";
}

.fab-pinterest-alt:before {
  content: "\F00B";
}

.fab-tumblr:before {
  content: "\F00C";
}

.fab-tumblr-alt:before {
  content: "\F00D";
}

.fab-bitcoin:before {
  content: "\F010";
}

.fab-bitcoin-alt:before {
  content: "\F011";
}

.fab-dropbox:before {
  content: "\F012";
}

.fab-stackexchange:before {
  content: "\F013";
}

.fab-stackoverflow:before {
  content: "\F014";
}

.fab-flickr:before {
  content: "\F015";
}

.fab-flickr-alt:before {
  content: "\F016";
}

.fab-bitbucket:before {
  content: "\F017";
}

.fab-html5:before {
  content: "\F018";
}

.fab-css3:before {
  content: "\F019";
}

.fab-apple:before {
  content: "\F01A";
}

.fab-windows:before {
  content: "\F01B";
}

.fab-android:before {
  content: "\F01C";
}

.fab-linux:before {
  content: "\F01D";
}

.fab-dribbble:before {
  content: "\F01E";
}

.fab-youtube:before {
  content: "\F021";
}

.fab-skype:before {
  content: "\F022";
}

.fab-foursquare:before {
  content: "\F023";
}

.fab-trello:before {
  content: "\F024";
}

.fab-maxcdn:before {
  content: "\F025";
}

.fab-gittip:before,
.fab-gratipay:before {
  content: "\F026";
}

.fab-vimeo:before {
  content: "\F027";
}

.fab-vimeo-alt:before {
  content: "\F028";
}

.fab-slack:before {
  content: "\F029";
}

.fab-wordpress:before {
  content: "\F02A";
}

.fab-wordpress-alt:before {
  content: "\F02B";
}

.fab-openid:before {
  content: "\F02C";
}

.fab-yahoo:before {
  content: "\F02D";
}

.fab-yahoo-alt:before {
  content: "\F02E";
}

.fab-reddit:before {
  content: "\F02F";
}

.fab-google:before {
  content: "\F030";
}

.fab-google-alt:before {
  content: "\F031";
}

.fab-stumbleupon:before {
  content: "\F032";
}

.fab-stumbleupon-alt:before {
  content: "\F033";
}

.fab-delicious:before {
  content: "\F034";
}

.fab-digg:before {
  content: "\F035";
}

.fab-piedpiper:before {
  content: "\F036";
}

.fab-piedpiper-alt:before {
  content: "\F037";
}

.fab-drupal:before {
  content: "\F038";
}

.fab-joomla:before {
  content: "\F039";
}

.fab-behance:before {
  content: "\F03A";
}

.fab-steam:before {
  content: "\F03B";
}

.fab-steam-alt:before {
  content: "\F03C";
}

.fab-spotify:before {
  content: "\F03D";
}

.fab-deviantart:before {
  content: "\F03E";
}

.fab-soundcloud:before {
  content: "\F040";
}

.fab-vine:before {
  content: "\F041";
}

.fab-codepen:before {
  content: "\F042";
}

.fab-jsfiddle:before {
  content: "\F043";
}

.fab-rebel:before {
  content: "\F044";
}

.fab-empire:before {
  content: "\F045";
}

.fab-git:before {
  content: "\F046";
}

.fab-hackernews:before {
  content: "\F047";
}

.fab-hackernews-alt:before {
  content: "\F048";
}

.fab-slideshare:before {
  content: "\F049";
}

.fab-twitch:before {
  content: "\F04A";
}

.fab-yelp:before {
  content: "\F04B";
}

.fab-paypal:before {
  content: "\F04C";
}

.fab-google-wallet:before {
  content: "\F04D";
}

.fab-angellist:before {
  content: "\F04E";
}

.fab-cc-visa:before {
  content: "\F050";
}

.fab-cc-mastercard:before {
  content: "\F051";
}

.fab-cc-discover:before {
  content: "\F052";
}

.fab-cc-amex:before {
  content: "\F053";
}

.fab-cc-paypal:before {
  content: "\F054";
}

.fab-cc-stripe:before {
  content: "\F055";
}

.fab-lastfm:before {
  content: "\F056";
}

.fab-whatsapp:before {
  content: "\F057";
}

.fab-medium:before {
  content: "\F058";
}

.fab-meanpath:before {
  content: "\F059";
}

.fab-meanpath-alt:before {
  content: "\F05A";
}

.fab-pagelines:before {
  content: "\F05B";
}

.fab-ioxhost:before {
  content: "\F060";
}

.fab-buysellads:before {
  content: "\F061";
}

.fab-buysellads-alt:before {
  content: "\F062";
}

.fab-connectdevelop:before {
  content: "\F063";
}

.fab-dashcube:before {
  content: "\F064";
}

.fab-forumbee:before {
  content: "\F065";
}

.fab-leanpub:before {
  content: "\F066";
}

.fab-sellsy:before {
  content: "\F067";
}

.fab-shirtsinbulk:before {
  content: "\F068";
}

.fab-simplybuilt:before {
  content: "\F069";
}

.fab-skyatlas:before {
  content: "\F06A";
}

.fab-viacoin:before {
  content: "\F06B";
}

.fab-codiepie:before {
  content: "\F06C";
}

.fab-queue:before {
  content: "\F06D";
}

.fab-queue-alt:before {
  content: "\F06E";
}

.fab-fonticons:before {
  content: "\F070";
}

.fab-fonticons-alt:before {
  content: "\F071";
}

.fab-blacktie:before {
  content: "\F072";
}

.fab-blacktie-alt:before {
  content: "\F073";
}

.fab-xing:before {
  content: "\F090";
}

.fab-vk:before {
  content: "\F091";
}

.fab-weibo:before {
  content: "\F092";
}

.fab-renren:before {
  content: "\F093";
}

.fab-tencent-weibo:before {
  content: "\F094";
}

.fab-qq:before {
  content: "\F095";
}

.fab-wechat:before,
.fab-weixin:before {
  content: "\F096";
}

/* Slider */

.slick-slider {
  position: relative;
  display: block;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -ms-touch-action: pan-y;
  touch-action: pan-y;
  -webkit-tap-highlight-color: transparent;
}

.slick-list {
  position: relative;
  overflow: hidden;
  display: block;
  margin: 0;
  padding: 0;
}

.slick-list:focus {
  outline: none;
}

.slick-list.dragging {
  cursor: pointer;
  cursor: hand;
}

.slick-slider .slick-track,
.slick-slider .slick-list {
  -webkit-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
}

.slick-track {
  position: relative;
  left: 0;
  top: 0;
  display: block;
}

.slick-track:before,
.slick-track:after {
  content: "";
  display: table;
}

.slick-track:after {
  clear: both;
}

.slick-loading .slick-track {
  visibility: hidden;
}

.slick-slide {
  float: left;
  height: 100%;
  min-height: 1px;
  display: none;
}

[dir="rtl"] .slick-slide {
  float: right;
}

.slick-slide img {
  display: block;
}

.slick-slide.slick-loading img {
  display: none;
}

.slick-slide.dragging img {
  pointer-events: none;
}

.slick-initialized .slick-slide {
  display: block;
}

.slick-loading .slick-slide {
  visibility: hidden;
}

.slick-vertical .slick-slide {
  display: block;
  height: auto;
  border: 1px solid transparent;
}

.slick-arrow.slick-hidden {
  display: none;
}

/* Slider */

.slick-loading .slick-list {
  background: #fff url(resourcesimages/vendor/slick-carousel/slick/ajax-loader.gif?68b0c4fcb84d239f261c1a5e65818142) center center no-repeat;
}

/* Icons */

@font-face {
  font-family: "slick";
  src: url(resourcesfonts/vendor/slick-carousel/slick/slick.eot?ced611daf7709cc778da928fec876475);
  src: url(resourcesfonts/vendor/slick-carousel/slick/slick.eot?ced611daf7709cc778da928fec876475) format("embedded-opentype"), url(resourcesfonts/vendor/slick-carousel/slick/slick.woff?b7c9e1e479de3b53f1e4e30ebac2403a) format("woff"), url(resourcesfonts/vendor/slick-carousel/slick/slick.ttf?d41f55a78e6f49a5512878df1737e58a) format("truetype"), url(resourcesfonts/vendor/slick-carousel/slick/slick.svg?f97e3bbf73254b0112091d0192f17aec) format("svg");
  font-weight: normal;
  font-style: normal;
}

/* Arrows */

.slick-prev,
.slick-next {
  position: absolute;
  display: block;
  height: 20px;
  width: 20px;
  line-height: 0px;
  font-size: 0px;
  cursor: pointer;
  background: transparent;
  color: transparent;
  top: 50%;
  -webkit-transform: translate(0, -50%);
  transform: translate(0, -50%);
  padding: 0;
  border: none;
  outline: none;
}

.slick-prev:hover,
.slick-prev:focus,
.slick-next:hover,
.slick-next:focus {
  outline: none;
  background: transparent;
  color: transparent;
}

.slick-prev:hover:before,
.slick-prev:focus:before,
.slick-next:hover:before,
.slick-next:focus:before {
  opacity: 1;
}

.slick-prev.slick-disabled:before,
.slick-next.slick-disabled:before {
  opacity: 0.25;
}

.slick-prev:before,
.slick-next:before {
  font-family: "slick";
  font-size: 20px;
  line-height: 1;
  color: white;
  opacity: 0.75;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.slick-prev {
  left: -25px;
}

[dir="rtl"] .slick-prev {
  left: auto;
  right: -25px;
}

.slick-prev:before {
  content: "\2190";
}

[dir="rtl"] .slick-prev:before {
  content: "\2192";
}

.slick-next {
  right: -25px;
}

[dir="rtl"] .slick-next {
  left: -25px;
  right: auto;
}

.slick-next:before {
  content: "\2192";
}

[dir="rtl"] .slick-next:before {
  content: "\2190";
}

/* Dots */

.slick-dotted.slick-slider {
  margin-bottom: 30px;
}

.slick-dots {
  position: absolute;
  bottom: -25px;
  list-style: none;
  display: block;
  text-align: center;
  padding: 0;
  margin: 0;
  width: 100%;
}

.slick-dots li {
  position: relative;
  display: inline-block;
  height: 20px;
  width: 20px;
  margin: 0 5px;
  padding: 0;
  cursor: pointer;
}

.slick-dots li button {
  border: 0;
  background: transparent;
  display: block;
  height: 20px;
  width: 20px;
  outline: none;
  line-height: 0px;
  font-size: 0px;
  color: transparent;
  padding: 5px;
  cursor: pointer;
}

.slick-dots li button:hover,
.slick-dots li button:focus {
  outline: none;
}

.slick-dots li button:hover:before,
.slick-dots li button:focus:before {
  opacity: 1;
}

.slick-dots li button:before {
  position: absolute;
  top: 0;
  left: 0;
  content: "\2022";
  width: 20px;
  height: 20px;
  font-family: "slick";
  font-size: 6px;
  line-height: 20px;
  text-align: center;
  color: black;
  opacity: 0.25;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.slick-dots li.slick-active button:before {
  color: black;
  opacity: 0.75;
}

/* =======================
   Slick Carousel Custom Style
   ======================= */

/* =======================
   Settings/Colors
   ======================= */

/* =======================
   Tools/Color
   ======================= */

.slick-slider {
  margin-bottom: 60px !important;
}

.slick-loading .slick-list {
  background: url("/images/loader.svg") no-repeat center center;
}

.slick-arrow {
  background-color: transparent;
  background-repeat: no-repeat;
  background-position: center center;
  background-size: contain;
  width: 28px;
  height: 51px;
  outline: none;
}

.slick-prev,
.slick-next {
  height: 100%;
  width: 50%;
  z-index: 999;
}

.slick-prev:before,
.slick-next:before {
  content: '';
  font-family: inherit;
}

.slick-prev {
  cursor: url(/images/vendor/slick/prev-arrow-black.svg), w-resize;
  float: left;
  left: 0;
}

.slick-next {
  cursor: url(/images/vendor/slick/next-arrow-black.svg), default;
  float: right;
  right: 0;
}

.slick-dots {
  bottom: -36px;
}

.slick-dots li button:before {
  font-family: inherit;
  font-size: 40px !important;
}

.slick-dots li.slick-active button:before {
  opacity: 1;
}

@-webkit-keyframes plyr-progress {
  to {
    background-position: 25px 0;
  }
}

@keyframes plyr-progress {
  to {
    background-position: 25px 0;
  }
}

.plyr {
  position: relative;
  max-width: 100%;
  min-width: 200px;
  font-family: Avenir, "Avenir Next", "Helvetica Neue", "Segoe UI", Helvetica, Arial, sans-serif;
  direction: ltr;
}

.plyr,
.plyr *,
.plyr *::after,
.plyr *::before {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

.plyr a,
.plyr button,
.plyr input,
.plyr label {
  -ms-touch-action: manipulation;
      touch-action: manipulation;
}

.plyr:focus {
  outline: 0;
}

.plyr video,
.plyr audio {
  width: 100%;
  height: auto;
  vertical-align: middle;
  border-radius: inherit;
}

.plyr input[type='range'] {
  display: block;
  height: 20px;
  width: 100%;
  margin: 0;
  padding: 0;
  vertical-align: middle;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  cursor: pointer;
  border: none;
  background: transparent;
}

.plyr input[type='range']::-webkit-slider-runnable-track {
  height: 8px;
  background: transparent;
  border: 0;
  border-radius: 4px;
  -webkit-user-select: none;
          user-select: none;
}

.plyr input[type='range']::-webkit-slider-thumb {
  -webkit-appearance: none;
  margin-top: -4px;
  position: relative;
  height: 16px;
  width: 16px;
  background: #fff;
  border: 2px solid transparent;
  border-radius: 100%;
  -webkit-transition: background .2s ease, border .2s ease, -webkit-transform .2s ease;
  transition: background .2s ease, border .2s ease, -webkit-transform .2s ease;
  transition: background .2s ease, border .2s ease, transform .2s ease;
  transition: background .2s ease, border .2s ease, transform .2s ease, -webkit-transform .2s ease;
  -webkit-box-shadow: 0 1px 1px rgba(0, 0, 0, 0.15), 0 0 0 1px rgba(0, 0, 0, 0.15);
          box-shadow: 0 1px 1px rgba(0, 0, 0, 0.15), 0 0 0 1px rgba(0, 0, 0, 0.15);
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

.plyr input[type='range']::-moz-range-track {
  height: 8px;
  background: transparent;
  border: 0;
  border-radius: 4px;
  -moz-user-select: none;
       user-select: none;
}

.plyr input[type='range']::-moz-range-thumb {
  position: relative;
  height: 16px;
  width: 16px;
  background: #fff;
  border: 2px solid transparent;
  border-radius: 100%;
  -webkit-transition: background .2s ease, border .2s ease, -webkit-transform .2s ease;
  transition: background .2s ease, border .2s ease, -webkit-transform .2s ease;
  transition: background .2s ease, border .2s ease, transform .2s ease;
  transition: background .2s ease, border .2s ease, transform .2s ease, -webkit-transform .2s ease;
  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.15), 0 0 0 1px rgba(0, 0, 0, 0.15);
  box-sizing: border-box;
}

.plyr input[type='range']::-ms-track {
  height: 8px;
  background: transparent;
  border: 0;
  color: transparent;
}

.plyr input[type='range']::-ms-fill-upper {
  height: 8px;
  background: transparent;
  border: 0;
  border-radius: 4px;
  -ms-user-select: none;
      user-select: none;
}

.plyr input[type='range']::-ms-fill-lower {
  height: 8px;
  background: transparent;
  border: 0;
  border-radius: 4px;
  -ms-user-select: none;
      user-select: none;
  background: #3498db;
}

.plyr input[type='range']::-ms-thumb {
  position: relative;
  height: 16px;
  width: 16px;
  background: #fff;
  border: 2px solid transparent;
  border-radius: 100%;
  -webkit-transition: background .2s ease, border .2s ease, -webkit-transform .2s ease;
  transition: background .2s ease, border .2s ease, -webkit-transform .2s ease;
  transition: background .2s ease, border .2s ease, transform .2s ease;
  transition: background .2s ease, border .2s ease, transform .2s ease, -webkit-transform .2s ease;
  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.15), 0 0 0 1px rgba(0, 0, 0, 0.15);
  box-sizing: border-box;
  margin-top: 0;
}

.plyr input[type='range']::-ms-tooltip {
  display: none;
}

.plyr input[type='range']:focus {
  outline: 0;
}

.plyr input[type='range']::-moz-focus-outer {
  border: 0;
}

.plyr input[type='range'].tab-focus:focus {
  outline-offset: 3px;
}

.plyr input[type='range']:active::-webkit-slider-thumb {
  background: #3498db;
  border-color: #fff;
  -webkit-transform: scale(1.25);
          transform: scale(1.25);
}

.plyr input[type='range']:active::-moz-range-thumb {
  background: #3498db;
  border-color: #fff;
  transform: scale(1.25);
}

.plyr input[type='range']:active::-ms-thumb {
  background: #3498db;
  border-color: #fff;
  transform: scale(1.25);
}

.plyr--video input[type='range'].tab-focus:focus {
  outline: 1px dotted rgba(255, 255, 255, 0.5);
}

.plyr--audio input[type='range'].tab-focus:focus {
  outline: 1px dotted rgba(86, 93, 100, 0.5);
}

.plyr__sr-only {
  clip: rect(1px, 1px, 1px, 1px);
  overflow: hidden;
  position: absolute !important;
  padding: 0 !important;
  border: 0 !important;
  height: 1px !important;
  width: 1px !important;
}

.plyr__video-wrapper {
  position: relative;
  background: #000;
  border-radius: inherit;
}

.plyr__video-embed {
  padding-bottom: 56.25%;
  /* 16:9 */
  height: 0;
  border-radius: inherit;
  overflow: hidden;
  z-index: 0;
}

.plyr__video-embed iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: 0;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.plyr__video-embed > div {
  position: relative;
  padding-bottom: 200%;
  -webkit-transform: translateY(-35.95%);
          transform: translateY(-35.95%);
}

.plyr .plyr__video-embed iframe {
  pointer-events: none;
}

.plyr video::-webkit-media-text-track-container {
  display: none;
}

.plyr__captions {
  display: none;
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  padding: 20px;
  -webkit-transform: translateY(-60px);
          transform: translateY(-60px);
  -webkit-transition: -webkit-transform .3s ease;
  transition: -webkit-transform .3s ease;
  transition: transform .3s ease;
  transition: transform .3s ease, -webkit-transform .3s ease;
  color: #fff;
  font-size: 16px;
  text-align: center;
  font-weight: 400;
}

.plyr__captions span {
  border-radius: 2px;
  padding: 3px 10px;
  background: rgba(0, 0, 0, 0.7);
  -webkit-box-decoration-break: clone;
          box-decoration-break: clone;
  line-height: 150%;
}

.plyr__captions span:empty {
  display: none;
}

@media (min-width: 768px) {
  .plyr__captions {
    font-size: 24px;
  }
}

.plyr--captions-active .plyr__captions {
  display: block;
}

.plyr--hide-controls .plyr__captions {
  -webkit-transform: translateY(-20px);
          transform: translateY(-20px);
}

@media (min-width: 1024px) {
  .plyr--fullscreen-active .plyr__captions {
    font-size: 32px;
  }
}

.plyr ::-webkit-media-controls {
  display: none;
}

.plyr__controls {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  line-height: 1;
  text-align: center;
}

.plyr__controls > button,
.plyr__controls .plyr__progress,
.plyr__controls .plyr__time {
  margin-left: 5px;
}

.plyr__controls > button:first-child,
.plyr__controls .plyr__progress:first-child,
.plyr__controls .plyr__time:first-child {
  margin-left: 0;
}

.plyr__controls .plyr__volume {
  margin-left: 5px;
}

.plyr__controls [data-plyr="pause"] {
  margin-left: 0;
}

.plyr__controls button {
  position: relative;
  display: inline-block;
  -ms-flex-negative: 0;
      flex-shrink: 0;
  overflow: visible;
  vertical-align: middle;
  padding: 7px;
  border: 0;
  background: transparent;
  border-radius: 3px;
  cursor: pointer;
  -webkit-transition: background .3s ease, color .3s ease, opacity .3s ease;
  transition: background .3s ease, color .3s ease, opacity .3s ease;
  color: inherit;
}

.plyr__controls button svg {
  width: 18px;
  height: 18px;
  display: block;
  fill: currentColor;
}

.plyr__controls button:focus {
  outline: 0;
}

.plyr__controls .icon--exit-fullscreen,
.plyr__controls .icon--muted,
.plyr__controls .icon--captions-on {
  display: none;
}

@media (min-width: 480px) {
  .plyr__controls > button,
  .plyr__controls .plyr__progress,
  .plyr__controls .plyr__time {
    margin-left: 10px;
  }
}

.plyr--hide-controls .plyr__controls {
  opacity: 0;
  pointer-events: none;
}

.plyr--video .plyr__controls {
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  padding: 50px 10px 10px;
  background: -webkit-gradient(linear, left top, left bottom, from(transparent), to(rgba(0, 0, 0, 0.5)));
  background: linear-gradient(transparent, rgba(0, 0, 0, 0.5));
  border-bottom-left-radius: inherit;
  border-bottom-right-radius: inherit;
  color: #fff;
  -webkit-transition: opacity .3s ease;
  transition: opacity .3s ease;
}

.plyr--video .plyr__controls button.tab-focus:focus,
.plyr--video .plyr__controls button:hover {
  background: #3498db;
  color: #fff;
}

.plyr--audio .plyr__controls {
  padding: 10px;
  border-radius: inherit;
  background: #fff;
  border: 1px solid #dbe3e8;
  color: #565D64;
}

.plyr--audio .plyr__controls button.tab-focus:focus,
.plyr--audio .plyr__controls button:hover {
  background: #3498db;
  color: #fff;
}

.plyr__play-large {
  display: none;
  position: absolute;
  z-index: 1;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  padding: 10px;
  background: #3498db;
  border: 4px solid currentColor;
  border-radius: 100%;
  -webkit-box-shadow: 0 1px 1px rgba(0, 0, 0, 0.15);
          box-shadow: 0 1px 1px rgba(0, 0, 0, 0.15);
  color: #fff;
  -webkit-transition: all .3s ease;
  transition: all .3s ease;
}

.plyr__play-large svg {
  position: relative;
  left: 2px;
  width: 20px;
  height: 20px;
  display: block;
  fill: currentColor;
}

.plyr__play-large:focus {
  outline: 1px dotted rgba(255, 255, 255, 0.5);
}

.plyr .plyr__play-large {
  display: inline-block;
}

.plyr--audio .plyr__play-large {
  display: none;
}

.plyr--playing .plyr__play-large {
  opacity: 0;
  visibility: hidden;
}

.plyr__controls [data-plyr='pause'],
.plyr--playing .plyr__controls [data-plyr='play'] {
  display: none;
}

.plyr--playing .plyr__controls [data-plyr='pause'] {
  display: inline-block;
}

.plyr--fullscreen-active .icon--exit-fullscreen,
.plyr--muted .plyr__controls .icon--muted,
.plyr--captions-active .plyr__controls .icon--captions-on {
  display: block;
}

.plyr--fullscreen-active .icon--exit-fullscreen + svg,
.plyr--muted .plyr__controls .icon--muted + svg,
.plyr--captions-active .plyr__controls .icon--captions-on + svg {
  display: none;
}

.plyr [data-plyr='captions'],
.plyr [data-plyr='fullscreen'] {
  display: none;
}

.plyr--captions-enabled [data-plyr='captions'],
.plyr--fullscreen-enabled [data-plyr='fullscreen'] {
  display: inline-block;
}

.plyr__tooltip {
  position: absolute;
  z-index: 2;
  bottom: 100%;
  margin-bottom: 10px;
  padding: 5px 7.5px;
  pointer-events: none;
  opacity: 0;
  background: rgba(0, 0, 0, 0.7);
  border-radius: 3px;
  color: #fff;
  font-size: 14px;
  line-height: 1.3;
  -webkit-transform: translate(-50%, 10px) scale(0.8);
          transform: translate(-50%, 10px) scale(0.8);
  -webkit-transform-origin: 50% 100%;
          transform-origin: 50% 100%;
  -webkit-transition: opacity .2s .1s ease, -webkit-transform .2s .1s ease;
  transition: opacity .2s .1s ease, -webkit-transform .2s .1s ease;
  transition: transform .2s .1s ease, opacity .2s .1s ease;
  transition: transform .2s .1s ease, opacity .2s .1s ease, -webkit-transform .2s .1s ease;
}

.plyr__tooltip::before {
  content: '';
  position: absolute;
  width: 0;
  height: 0;
  left: 50%;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
  bottom: -4px;
  border-right: 4px solid transparent;
  border-top: 4px solid rgba(0, 0, 0, 0.7);
  border-left: 4px solid transparent;
  z-index: 2;
}

.plyr button:hover .plyr__tooltip,
.plyr button.tab-focus:focus .plyr__tooltip,
.plyr__tooltip--visible {
  opacity: 1;
  -webkit-transform: translate(-50%, 0) scale(1);
          transform: translate(-50%, 0) scale(1);
}

.plyr button:hover .plyr__tooltip {
  z-index: 3;
}

.plyr__controls button:first-child .plyr__tooltip {
  left: 0;
  -webkit-transform: translate(0, 10px) scale(0.8);
          transform: translate(0, 10px) scale(0.8);
  -webkit-transform-origin: 0 100%;
          transform-origin: 0 100%;
}

.plyr__controls button:first-child .plyr__tooltip::before {
  left: 16px;
}

.plyr__controls button:last-child .plyr__tooltip {
  right: 0;
  -webkit-transform: translate(0, 10px) scale(0.8);
          transform: translate(0, 10px) scale(0.8);
  -webkit-transform-origin: 100% 100%;
          transform-origin: 100% 100%;
}

.plyr__controls button:last-child .plyr__tooltip::before {
  left: auto;
  right: 16px;
  -webkit-transform: translateX(50%);
          transform: translateX(50%);
}

.plyr__controls button:first-child:hover .plyr__tooltip,
.plyr__controls button:first-child.tab-focus:focus .plyr__tooltip,
.plyr__controls button:first-child .plyr__tooltip--visible,
.plyr__controls button:last-child:hover .plyr__tooltip,
.plyr__controls button:last-child.tab-focus:focus .plyr__tooltip,
.plyr__controls button:last-child .plyr__tooltip--visible {
  -webkit-transform: translate(0, 0) scale(1);
          transform: translate(0, 0) scale(1);
}

.plyr__progress {
  display: none;
  position: relative;
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
}

.plyr__progress input[type="range"] {
  position: relative;
  z-index: 2;
}

.plyr__progress input[type="range"]::-webkit-slider-runnable-track {
  background: transparent;
}

.plyr__progress input[type="range"]::-moz-range-track {
  background: transparent;
}

.plyr__progress input[type="range"]::-ms-fill-upper {
  background: transparent;
}

.plyr__progress .plyr__tooltip {
  left: 0;
}

.plyr .plyr__progress {
  display: inline-block;
}

.plyr__progress--buffer,
.plyr__progress--played,
.plyr__volume--display {
  position: absolute;
  left: 0;
  top: 50%;
  width: 100%;
  height: 8px;
  margin: -4px 0 0;
  padding: 0;
  vertical-align: top;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border: none;
  border-radius: 100px;
}

.plyr__progress--buffer::-webkit-progress-bar,
.plyr__progress--played::-webkit-progress-bar,
.plyr__volume--display::-webkit-progress-bar {
  background: transparent;
}

.plyr__progress--buffer::-webkit-progress-value,
.plyr__progress--played::-webkit-progress-value,
.plyr__volume--display::-webkit-progress-value {
  background: currentColor;
  border-radius: 100px;
  min-width: 8px;
}

.plyr__progress--buffer::-moz-progress-bar,
.plyr__progress--played::-moz-progress-bar,
.plyr__volume--display::-moz-progress-bar {
  background: currentColor;
  border-radius: 100px;
  min-width: 8px;
}

.plyr__progress--buffer::-ms-fill,
.plyr__progress--played::-ms-fill,
.plyr__volume--display::-ms-fill {
  border-radius: 100px;
}

.plyr__progress--played,
.plyr__volume--display {
  z-index: 1;
  color: #3498db;
  background: transparent;
  -webkit-transition: none;
  transition: none;
}

.plyr__progress--played::-webkit-progress-value,
.plyr__volume--display::-webkit-progress-value {
  min-width: 8px;
  max-width: 99%;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  -webkit-transition: none;
  transition: none;
}

.plyr__progress--played::-moz-progress-bar,
.plyr__volume--display::-moz-progress-bar {
  min-width: 8px;
  max-width: 99%;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  -webkit-transition: none;
  transition: none;
}

.plyr__progress--played::-ms-fill,
.plyr__volume--display::-ms-fill {
  display: none;
}

.plyr__progress--buffer::-webkit-progress-value {
  -webkit-transition: width .2s ease;
  transition: width .2s ease;
}

.plyr__progress--buffer::-moz-progress-bar {
  -webkit-transition: width .2s ease;
  transition: width .2s ease;
}

.plyr__progress--buffer::-ms-fill {
  -webkit-transition: width .2s ease;
  transition: width .2s ease;
}

.plyr--video .plyr__progress--buffer,
.plyr--video .plyr__volume--display {
  background: rgba(255, 255, 255, 0.25);
}

.plyr--video .plyr__progress--buffer {
  color: rgba(255, 255, 255, 0.25);
}

.plyr--audio .plyr__progress--buffer,
.plyr--audio .plyr__volume--display {
  background: rgba(198, 214, 219, 0.67);
}

.plyr--audio .plyr__progress--buffer {
  color: rgba(198, 214, 219, 0.67);
}

.plyr--loading .plyr__progress--buffer {
  -webkit-animation: plyr-progress 1s linear infinite;
          animation: plyr-progress 1s linear infinite;
  background-size: 25px 25px;
  background-repeat: repeat-x;
  background-image: linear-gradient(-45deg, rgba(0, 0, 0, 0.15) 25%, transparent 25%, transparent 50%, rgba(0, 0, 0, 0.15) 50%, rgba(0, 0, 0, 0.15) 75%, transparent 75%, transparent);
  color: transparent;
}

.plyr--video.plyr--loading .plyr__progress--buffer {
  background-color: rgba(255, 255, 255, 0.25);
}

.plyr--audio.plyr--loading .plyr__progress--buffer {
  background-color: rgba(198, 214, 219, 0.67);
}

.plyr__time {
  display: inline-block;
  vertical-align: middle;
  font-size: 14px;
}

.plyr__time + .plyr__time {
  display: none;
}

@media (min-width: 768px) {
  .plyr__time + .plyr__time {
    display: inline-block;
  }
}

.plyr__time + .plyr__time::before {
  content: '\2044';
  margin-right: 10px;
}

.plyr__volume {
  display: none;
}

.plyr .plyr__volume {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  position: relative;
}

.plyr .plyr__volume input[type="range"] {
  position: relative;
  z-index: 2;
}

@media (min-width: 480px) {
  .plyr .plyr__volume {
    display: block;
    max-width: 60px;
  }
}

@media (min-width: 768px) {
  .plyr .plyr__volume {
    max-width: 100px;
  }
}

.plyr--is-ios .plyr__volume,
.plyr--is-ios [data-plyr='mute'] {
  display: none !important;
}

.plyr--fullscreen-active {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  height: 100%;
  width: 100%;
  z-index: 10000000;
  background: #000;
  border-radius: 0 !important;
}

.plyr--fullscreen-active video {
  height: 100%;
}

.plyr--fullscreen-active .plyr__video-wrapper {
  height: 100%;
  width: 100%;
}

.plyr--fullscreen-active .plyr__video-embed {
  overflow: visible;
}

.plyr--fullscreen-active .plyr__controls {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
}

.plyr--fullscreen-active.plyr--vimeo .plyr__video-wrapper {
  height: 0;
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
}

/* =======================
   Tools/Fonts
   ======================= */

@font-face {
  font-family: "LLCircularWeb-Bold";
  src: url("/fonts/CircularStd-Bold/lineto-circular-bold-c.eot");
  src: url("/fonts/CircularStd-Bold/lineto-circular-bold-c.eot?#iefix") format("embedded-opentype"), url("/fonts/CircularStd-Bold/lineto-circular-bold-c.woff") format("woff"), url("/fonts/CircularStd-Bold/lineto-circular-bold-c.ttf") format("truetype"), url("/fonts/CircularStd-Bold/lineto-circular-bold-c.svg#LLCircularWeb-Bold") format("svg");
}

@font-face {
  font-family: "LLCircularWeb-Book";
  src: url("/fonts/CircularStd-Book/lineto-circular-book-c.eot");
  src: url("/fonts/CircularStd-Book/lineto-circular-book-c.eot?#iefix") format("embedded-opentype"), url("/fonts/CircularStd-Book/lineto-circular-book-c.woff") format("woff"), url("/fonts/CircularStd-Book/lineto-circular-book-c.ttf") format("truetype"), url("/fonts/CircularStd-Book/lineto-circular-book-c.svg#LLCircularWeb-Book") format("svg");
}

/* =======================
   Tools/Aliases
   ======================= */

/* =======================
   Tools/Mixins
   ======================= */

/* =======================
   Tools/Color
   ======================= */

/* =======================
   Tools/Button
   ======================= */

/* ==========================================================================
   #BOX-SIZING
   ========================================================================== */

/**
 * More sensible default box-sizing:
 * css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice
 */

html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

*,
*:before,
*:after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
}

/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */

/* Document
   ========================================================================== */

/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */

html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */

/**
 * Remove the margin in all browsers (opinionated).
 */

body {
  margin: 0;
}

/**
 * Add the correct display in IE 9-.
 */

article,
aside,
footer,
header,
nav,
section {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */

/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */

figcaption,
figure,
main {
  /* 1 */
  display: block;
}

/**
 * Add the correct margin in IE 8.
 */

figure {
  margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */

hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */

/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */

a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */

abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */

b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */

b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font style in Android 4.3-.
 */

dfn {
  font-style: italic;
}

/**
 * Add the correct background and color in IE 9-.
 */

mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */

/**
 * Add the correct display in IE 9-.
 */

audio,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */

audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Remove the border on images inside links in IE 10-.
 */

img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */

svg:not(:root) {
  overflow: hidden;
}

/* Forms
   ========================================================================== */

/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */

button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */

button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */

button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */

button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}

/**
 * Remove the inner border and padding in Firefox.
 */

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */

fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */

legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */

progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */

textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */

[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */

[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */

[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */

/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */

details,
menu {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */

summary {
  display: list-item;
}

/* Scripting
   ========================================================================== */

/**
 * Add the correct display in IE 9-.
 */

canvas {
  display: inline-block;
}

/**
 * Add the correct display in IE.
 */

template {
  display: none;
}

/* Hidden
   ========================================================================== */

/**
 * Add the correct display in IE 10-.
 */

[hidden] {
  display: none;
}

/* ==========================================================================
   #RESET
   ========================================================================== */

/**
 * A very simple reset that sits on top of Normalize.css.
 */

body,
h1,
h2,
h3,
h4,
h5,
h6,
blockquote,
p,
pre,
dl,
dd,
ol,
ul,
figure,
hr,
fieldset,
legend {
  margin: 0;
  padding: 0;
}

/**
 * Remove trailing margins from nested lists.
 */

li > ol,
li > ul {
  margin-bottom: 0;
}

/**
 * Remove default table spacing.
 */

table {
  border-collapse: collapse;
  border-spacing: 0;
}

/**
 * 1. Reset Chrome and Firefox behaviour which sets a `min-width: min-content;`
 *    on fieldsets.
 */

fieldset {
  min-width: 0;
  /* [1] */
  border: 0;
}

/* ==========================================================================
   #SHARED
   ========================================================================== */

/**
 * Shared declarations for certain elements.
 */

/**
 * Always declare margins in the same direction:
 * csswizardry.com/2012/06/single-direction-margin-declarations
 */

/* stylelint-disable selector-list-comma-newline-after */

address,
h1,
h2,
h3,
h4,
h5,
h6,
blockquote,
p,
pre,
dl,
ol,
ul,
figure,
hr,
table,
fieldset {
  margin-bottom: 24px;
}

/**
 * Consistent indentation for lists.
 */

dd,
ol,
ul {
  margin-left: 24px;
}

/* stylelint-enable selector-list-comma-newline-after */

/* ==========================================================================
   #PAGE
   ========================================================================== */

/**
 * Simple page-level setup.
 *
 * 1. Set the default `font-size` and `line-height` for the entire project,
 *    sourced from our default variables. The `font-size` is calculated to exist
 *    in ems, the `line-height` is calculated to exist unitlessly.
 * 2. Force scrollbars to always be visible to prevent awkward ‘jumps’ when
 *    navigating between pages that do/do not have enough content to produce
 *    scrollbars naturally.
 * 3. Ensure the page always fills at least the entire height of the viewport.
 */

html {
  font-size: 1em;
  /* [1] */
  line-height: 1.5;
  /* [1] */
  overflow-y: scroll;
  /* [2] */
  min-height: 100%;
  /* [3] */
}

/* =======================
   Elements/Page
   ======================= */

html,
body {
  font-family: 'LLCircularWeb-Book', Arial, sans-serif;
}

html {
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
}

body {
  background: url(/images/01.jpg) no-repeat center center fixed;
  background-size: cover;
}

body:after {
  display: none;
  content: 'mobile';
}

@media (min-width: 46.25em) {
  body:after {
    content: 'tablet';
  }
}

@media (min-width: 61.25em) {
  body:after {
    content: 'desktop';
  }
}

@media (min-width: 81.25em) {
  body:after {
    content: 'desktop';
  }
}

/* ==========================================================================
   #IMAGES
   ========================================================================== */

/**
 * 1. Fluid images for responsive purposes.
 * 2. Offset `alt` text from surrounding copy.
 * 3. Setting `vertical-align` removes the whitespace that appears under `img`
 *    elements when they are dropped into a page as-is. Safer alternative to
 *    using `display: block;`.
 */

img {
  max-width: 100%;
  /* [1] */
  font-style: italic;
  /* [2] */
  vertical-align: middle;
  /* [3] */
}

/**
 * 1. If a `width` and/or `height` attribute have been explicitly defined, let’s
 *    not make the image fluid.
 */

img[width],
img[height] {
  /* [1] */
  max-width: none;
}

/* ==========================================================================
   #TABLES
   ========================================================================== */

/**
 * 1. Ensure tables fill up as much space as possible.
 */

table {
  width: 100%;
  /* [1] */
}

/* =======================
   Elements/Links
   ======================= */

a {
  color: inherit;
  text-decoration: underline;
}

a:hover {
  text-decoration: none;
}

/* =======================
   Elements/Text
   ======================= */

address {
  font-style: normal;
}

/* ==========================================================================
   #WRAPPER
   ========================================================================== */

/**
 * Page-level constraining and wrapping elements.
 */

/* stylelint-disable */

/* stylelint-enable */

.o-wrapper {
  padding-right: 24px;
  padding-left: 24px;
  margin-right: auto;
  margin-left: auto;
  max-width: 1200px;
}

.o-wrapper:after {
  content: "" !important;
  display: block !important;
  clear: both !important;
}

/* Size variants.
   ========================================================================== */

.o-wrapper--tiny {
  padding-right: 6px;
  padding-left: 6px;
}

.o-wrapper--small {
  padding-right: 12px;
  padding-left: 12px;
}

.o-wrapper--large {
  padding-right: 48px;
  padding-left: 48px;
}

.o-wrapper--huge {
  padding-right: 96px;
  padding-left: 96px;
}

/* =======================
   Objects/Wrapper
   ======================= */

.o-wrapper {
  max-width: none;
  padding-left: 12px;
  padding-right: 12px;
}

.o-wrapper--large {
  max-width: none;
}

@media (min-width: 46.25em) {
  .o-wrapper--large {
    padding-right: 48px;
    padding-left: 48px;
  }
}

.o-wrapper--huge {
  max-width: none;
}

@media (min-width: 46.25em) {
  .o-wrapper--huge {
    padding-right: 48px;
    padding-left: 48px;
  }
}

@media (min-width: 61.25em) {
  .o-wrapper--huge {
    padding-right: 96px;
    padding-left: 96px;
  }
}

@media (max-width: 46.24em) {
  .o-wrapper--flush-mobile {
    padding-right: 0;
    padding-left: 0;
  }
}

/* ==========================================================================
   #LAYOUT
   ========================================================================== */

/**
 * Grid-like layout system.
 *
 * The layout object provides us with a column-style layout system. This file
 * contains the basic structural elements, but classes should be complemented
 * with width utilities, for example:
 *
 *   <div class="o-layout">
 *     <div class="o-layout__item  u-1/2">
 *     </div>
 *     <div class="o-layout__item  u-1/2">
 *     </div>
 *   </div>
 *
 * The above will create a two-column structure in which each column will
 * fluidly fill half of the width of the parent. We can have more complex
 * systems:
 *
 *   <div class="o-layout">
 *     <div class="o-layout__item  u-1/1  u-1/3@medium">
 *     </div>
 *     <div class="o-layout__item  u-1/2  u-1/3@medium">
 *     </div>
 *     <div class="o-layout__item  u-1/2  u-1/3@medium">
 *     </div>
 *   </div>
 *
 * The above will create a system in which the first item will be 100% width
 * until we enter our medium breakpoint, when it will become 33.333% width. The
 * second and third items will be 50% of their parent, until they also become
 * 33.333% width at the medium breakpoint.
 *
 * We can also manipulate entire layout systems by adding a series of modifiers
 * to the `.o-layout` block. For example:
 *
 *   <div class="o-layout  o-layout--reverse">
 *
 * This will reverse the displayed order of the system so that it runs in the
 * opposite order to our source, effectively flipping the system over.
 *
 *   <div class="o-layout  o-layout--[right|center]">
 *
 * This will cause the system to fill up from either the centre or the right
 * hand side. Default behaviour is to fill up the layout system from the left.
 *
 * There are plenty more options available to us: explore them below.
 */

/* Default/mandatory classes.
   ========================================================================== */

/**
 * 1. Allows us to use the layout object on any type of element.
 * 2. We need to defensively reset any box-model properties.
 * 3. Use the negative margin trick for multi-row grids:
 *    http://csswizardry.com/2011/08/building-better-grid-systems/
 */

.o-layout {
  display: block;
  /* [1] */
  margin: 0;
  /* [2] */
  padding: 0;
  /* [2] */
  list-style: none;
  /* [1] */
  margin-left: -24px;
  /* [3] */
  font-size: 0;
}

/**
   * 1. Required in order to combine fluid widths with fixed gutters.
   * 2. Allows us to manipulate grids vertically, with text-level properties,
   *    etc.
   * 3. Default item alignment is with the tops of each other, like most
   *    traditional grid/layout systems.
   * 4. By default, all layout items are full-width (mobile first).
   * 5. Gutters provided by left padding:
   *    http://csswizardry.com/2011/08/building-better-grid-systems/
   * 6. Fallback for old IEs not supporting `rem` values.
   */

.o-layout__item {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* [1] */
  display: inline-block;
  /* [2] */
  vertical-align: top;
  /* [3] */
  width: 100%;
  /* [4] */
  padding-left: 24px;
  /* [5] */
  font-size: 16px;
  /* [6] */
  font-size: 1rem;
}

/* Gutter size modifiers.
   ========================================================================== */

.o-layout--flush {
  margin-left: 0;
}

.o-layout--flush > .o-layout__item {
  padding-left: 0;
}

.o-layout--tiny {
  margin-left: -6px;
}

.o-layout--tiny > .o-layout__item {
  padding-left: 6px;
}

.o-layout--small {
  margin-left: -12px;
}

.o-layout--small > .o-layout__item {
  padding-left: 12px;
}

.o-layout--large {
  margin-left: -48px;
}

.o-layout--large > .o-layout__item {
  padding-left: 48px;
}

.o-layout--huge {
  margin-left: -96px;
}

.o-layout--huge > .o-layout__item {
  padding-left: 96px;
}

/* Vertical alignment modifiers.
   ========================================================================== */

/**
 * Align all grid items to the middles of each other.
 */

.o-layout--middle > .o-layout__item {
  vertical-align: middle;
}

/**
 * Align all grid items to the bottoms of each other.
 */

.o-layout--bottom > .o-layout__item {
  vertical-align: bottom;
}

/**
 * Stretch all grid items of each row to have an equal-height.
 * Please be aware that this modifier class doesn't take any effect in IE9 and
 * below and other older browsers due to the lack of `display: flex` support.
 */

.o-layout--stretch {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
}

.o-layout--stretch > .o-layout__item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

/* Fill order modifiers.
   ========================================================================== */

/**
 * Fill up the layout system from the centre.
 */

.o-layout--center {
  text-align: center;
}

.o-layout--center > .o-layout__item {
  text-align: left;
}

/**
 * Fill up the layout system from the right-hand side.
 */

.o-layout--right {
  text-align: right;
}

.o-layout--right > .o-layout__item {
  text-align: left;
}

/**
 * Fill up the layout system from the left-hand side. This will likely only be
 * needed when using in conjunction with `.o-layout--reverse`.
 */

.o-layout--left {
  text-align: left;
}

.o-layout--left > .o-layout__item {
  text-align: left;
}

/**
 * Reverse the rendered order of the grid system.
 */

.o-layout--reverse {
  direction: rtl;
}

.o-layout--reverse > .o-layout__item {
  direction: ltr;
}

/* Auto-widths modifier.
   ========================================================================== */

/**
 * Cause layout items to take up a non-explicit amount of width.
 */

.o-layout--auto > .o-layout__item {
  width: auto;
}

/* =======================
   Objects/Wrapper
   ======================= */

.o-layout--equal-height {
  display: block;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
}

.o-layout--equal-height .o-layout__item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.o-layout--middle .o-layout--equal-height {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.o-layout--bottom .o-layout--equal-height {
  -webkit-box-align: end;
      -ms-flex-align: end;
          align-items: flex-end;
}

.o-layout--right .o-layout--equal-height {
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end;
}

.o-layout--center .o-layout--equal-height {
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

/* ==========================================================================
   #MEDIA
   ========================================================================== */

/**
 * Place any image- and text-like content side-by-side, as per:
 * http://www.stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code
 */

.o-media {
  display: block;
}

.o-media:after {
  content: "" !important;
  display: block !important;
  clear: both !important;
}

.o-media__img {
  float: left;
  margin-right: 24px;
}

.o-media__img > img {
  display: block;
}

.o-media__body {
  overflow: hidden;
  display: block;
}

.o-media__body,
.o-media__body > :last-child {
  margin-bottom: 0;
}

/* Size variants.
   ========================================================================== */

/**
 * Modify the amount of space between our image and our text. We also have
 * reversible options for all available sizes.
 */

/* Gutterless media objects.
  ========================================================================== */

.o-media--flush > .o-media__img {
  margin-right: 0;
  margin-left: 0;
}

.o-media--tiny > .o-media__img {
  margin-right: 6px;
}

.o-media--tiny.o-media--reverse > .o-media__img {
  margin-right: 0;
  margin-left: 6px;
}

.o-media--small > .o-media__img {
  margin-right: 12px;
}

.o-media--small.o-media--reverse > .o-media__img {
  margin-right: 0;
  margin-left: 12px;
}

.o-media--large > .o-media__img {
  margin-right: 48px;
}

.o-media--large.o-media--reverse > .o-media__img {
  margin-right: 0;
  margin-left: 48px;
}

.o-media--huge > .o-media__img {
  margin-right: 96px;
}

.o-media--huge.o-media--reverse > .o-media__img {
  margin-right: 0;
  margin-left: 96px;
}

/* Reversed media objects.
   ========================================================================== */

.o-media--reverse > .o-media__img {
  float: right;
  margin-right: 0;
  margin-left: 24px;
}

/* ==========================================================================
   #FLAG
   ========================================================================== */

/**
 * The flag object is a design pattern similar to the media object, however it
 * utilises `display: table[-cell];` to give us control over the vertical
 * alignments of the text and image.
 *
 * http://csswizardry.com/2013/05/the-flag-object/
 *
 * 1. Allows us to control vertical alignments.
 * 2. Force the object to be the full width of its parent. Combined with [1],
 *    this makes the object behave in a quasi-`display: block;` manner.
 * 3. Reset inherited `border-spacing` declarations.
 */

.o-flag {
  display: table;
  /* [1] */
  width: 100%;
  /* [2] */
  border-spacing: 0;
  /* [3] */
}

/**
   * Items within a flag object. There should only ever be one of each.
   *
   * 1. Default to aligning content to their middles.
   */

.o-flag__img,
.o-flag__body {
  display: table-cell;
  vertical-align: middle;
  /* [1] */
}

/**
   * Flag images have a space between them and the body of the object.
   *
   * 1. Force `.flag__img` to take up as little space as possible:
   *    https://pixelsvsbytes.com/2012/02/this-css-layout-grid-is-no-holy-grail/
   */

.o-flag__img {
  width: 1px;
  /* [1] */
  padding-right: 24px;
  /**
     * 1. Fixes problem with images disappearing.
     */
}

.o-flag__img > img {
  max-width: none;
  /* [1] */
}

/**
   * The container for the main content of the flag object.
   *
   * 1. Forces the `.flag__body` to take up all remaining space.
   */

.o-flag__body {
  width: auto;
  /* [1] */
}

.o-flag__body,
.o-flag__body > :last-child {
  margin-bottom: 0;
}

/* Size variants.
   ========================================================================== */

.o-flag--flush > .o-flag__img {
  padding-right: 0;
  padding-left: 0;
}

.o-flag--tiny > .o-flag__img {
  padding-right: 6px;
}

.o-flag--tiny.o-flag--reverse > .o-flag__img {
  padding-right: 0;
  padding-left: 6px;
}

.o-flag--small > .o-flag__img {
  padding-right: 12px;
}

.o-flag--small.o-flag--reverse > .o-flag__img {
  padding-right: 0;
  padding-left: 12px;
}

.o-flag--large > .o-flag__img {
  padding-right: 48px;
}

.o-flag--large.o-flag--reverse > .o-flag__img {
  padding-right: 0;
  padding-left: 48px;
}

.o-flag--huge > .o-flag__img {
  padding-right: 96px;
}

.o-flag--huge.o-flag--reverse > .o-flag__img {
  padding-right: 0;
  padding-left: 96px;
}

/* Reversed flag.
   ========================================================================== */

/**
 * 1. Swap the rendered direction of the object…
 * 2. …and reset it.
 * 3. Reassign margins to the correct sides.
 */

.o-flag--reverse {
  direction: rtl;
  /* [1] */
}

.o-flag--reverse > .o-flag__img,
.o-flag--reverse > .o-flag__body {
  direction: ltr;
  /* [2] */
}

.o-flag--reverse > .o-flag__img {
  padding-right: 0;
  /* [3] */
  padding-left: 24px;
  /* [3] */
}

/* Alignment variants.
   ========================================================================== */

/**
 * Vertically align the image- and body-content differently. Defaults to middle.
 */

.o-flag--top > .o-flag__img,
.o-flag--top > .o-flag__body {
  vertical-align: top;
}

.o-flag--bottom > .o-flag__img,
.o-flag--bottom > .o-flag__body {
  vertical-align: bottom;
}

/* ==========================================================================
   #LIST-BARE
   ========================================================================== */

/**
 * Strip list-like appearance from lists by removing their bullets, and any
 * indentation.
 *
 * Note: Declaring the item-class might not be necessary everywhere but
 * is for example in <dl> lists for the <dd> childs.
 */

.o-list-bare {
  list-style: none;
  margin-left: 0;
}

.o-list-bare__item {
  margin-left: 0;
}

/* ==========================================================================
   #LIST-INLINE
   ========================================================================== */

/**
 * The list-inline object simply displays a list of items in one line.
 */

.o-list-inline {
  margin-left: 0;
  list-style: none;
}

.o-list-inline__item {
  display: inline-block;
}

/* ==========================================================================
   #BLOCK
   ========================================================================== */

/**
 * Stacked image-with-text object. A simple abstraction to cover a very commonly
 * occurring design pattern.
 */

.o-block {
  display: block;
  text-align: center;
}

.o-block__img {
  margin-bottom: 24px;
  /* Size variants.
       ====================================================================== */
}

.o-block--flush > .o-block__img {
  margin-bottom: 0;
}

.o-block--tiny > .o-block__img {
  margin-bottom: 6px;
}

.o-block--small > .o-block__img {
  margin-bottom: 12px;
}

.o-block--large > .o-block__img {
  margin-bottom: 48px;
}

.o-block--huge > .o-block__img {
  margin-bottom: 96px;
}

.o-block__body {
  display: block;
}

/* Alignment variants.
   ========================================================================== */

.o-block--right {
  text-align: right;
}

.o-block--left {
  text-align: left;
}

/* =======================
   Objects/Heading
   ======================= */

.o-heading {
  font-weight: 400;
  font-family: 'LLCircularWeb-Book', Arial, sans-serif;
  font-size: 15px;
  font-size: 0.9375rem;
  line-height: 1.6;
}

.o-heading--large {
  font-size: 50px;
  font-size: 3.125rem;
  line-height: 1.44;
}

.o-heading--uppercase {
  text-transform: uppercase;
}

/* =======================
   Objects/Copy
   ======================= */

.o-copy {
  color: #333;
  margin-bottom: 24px;
  font-family: 'LLCircularWeb-Book', Arial, sans-serif;
  font-size: 15px;
  font-size: 0.9375rem;
  line-height: 1.6;
}

.o-copy:last-child,
.o-copy p:last-child {
  margin-bottom: 0;
}

/* =======================
   Components/Header
   ======================= */

.c-header {
  padding-bottom: 48px;
  padding-top: 96px;
  position: fixed;
  top: 0;
  right: 0;
  z-index: -1;
}

.c-header__logo {
  margin-bottom: 0;
  text-align: right;
}

/* =======================
   Components/Container
   ======================= */

.c-container {
  background-color: #ffffff;
  padding-top: 96px;
  margin-top: 500px;
}

/* =======================
   Components/Buttons
   ======================= */

.c-button__button {
  background-color: #333333;
  border: 1px solid #333333;
  cursor: pointer;
  max-width: 100%;
  outline: none;
  padding: 2px 22px;
  position: relative;
  text-align: center;
  text-decoration: none;
  -webkit-transition: all .2s;
  transition: all .2s;
}

@media (min-width: 46.25em) {
  .c-button__button {
    max-width: 480px;
  }
}

@media (min-width: 61.25em) {
  .c-button__button {
    max-width: 100%;
    width: inherit;
  }
}

.c-button__button:hover {
  background-color: #ffffff;
}

.c-button__button:hover .c-button__text {
  color: #333333;
}

.c-button__text {
  color: #ffffff;
  display: inline-block;
  text-align: center;
  text-transform: uppercase;
  -webkit-transition: all .2s;
  transition: all .2s;
  font-family: 'LLCircularWeb-Book', Arial, sans-serif;
  font-size: 12px;
  font-size: 0.75rem;
  line-height: 2;
}

/* =======================
   Components/Social
   ======================= */

.c-social {
  display: inline-block;
  margin-bottom: 24px;
}

.c-social:last-child,
.c-social p:last-child {
  margin-bottom: 0;
}

.c-social__link {
  margin: 0 3px;
  text-decoration: none;
  -webkit-transition: all .2s ease;
  transition: all .2s ease;
  font-size: 18px;
  font-size: 1.125rem;
  line-height: 1.33333333;
}

.c-social__link:first-child {
  margin-left: 0;
}

.c-social__link:last-child {
  margin-right: 0;
}

.c-social__link:hover {
  color: #999999;
}

/* =======================
   Components/About
   ======================= */

.c-about {
  margin-bottom: 96px;
  max-width: 820px;
}

/* =======================
   Components/Accordion Nav
   ======================= */

.c-accordion-nav__item {
  position: relative;
}

.c-accordion-nav__item.active .c-accordion-nav__spacer {
  padding: 0;
}

.c-accordion-nav__item.active .c-accordion-nav__content {
  height: 500px;
  padding-bottom: 48px;
  padding-top: 48px;
  -webkit-transition: all .6s .3s;
  transition: all .6s .3s;
}

.c-accordion-nav__spacer {
  bottom: 0;
  position: absolute;
  -webkit-transition: all .3s;
  transition: all .3s;
  width: 100%;
}

.c-accordion-nav__underline {
  border-bottom: 1px solid #333333;
}

.c-accordion-nav__clickable-area {
  cursor: pointer;
  padding-bottom: 12px;
  padding-top: 12px;
}

.c-accordion-nav__heading {
  display: inline-block;
  -webkit-transition: -webkit-transform .3s;
  transition: -webkit-transform .3s;
  transition: transform .3s;
  transition: transform .3s, -webkit-transform .3s;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.c-accordion-nav__content {
  background-color: #333333;
  height: 0;
  overflow: hidden;
  -webkit-transition: all .3s;
  transition: all .3s;
}

.c-accordion-nav__copy {
  color: #ffffff;
}

/* ==========================================================================
   #CLEARFIX
   ========================================================================== */

/**
 * Attach our clearfix mixin to a utility class.
 */

.u-clearfix:after {
  content: "" !important;
  display: block !important;
  clear: both !important;
}

/* ==========================================================================
   #WIDTHS
   ========================================================================== */

/**
 * inuitcss generates a series of utility classes that give a fluid width to
 * whichever element they’re applied, e.g.:
 *
 *   <img src="" alt="" class="u-1/2" />
 *
 * These classes are most commonly used in conjunction with our layout system,
 * e.g.:
 *
 *   <div class="o-layout__item  u-1/2">
 *
 * By default, inuitcss will also generate responsive variants of each of these
 * classes by using your Sass MQ configuration, e.g.:
 *
 *   <div class="o-layout__item  u-1/1  u-1/2@tablet  u-1/3@desktop">
 *
 * Optionally, inuitcss can generate offset classes which can push and pull
 * elements left and right by a specified amount, e.g.:
 *
 *   <div class="o-layout__item  u-2/3  u-pull-1/3">
 *
 * This is useful for making very granular changes to the rendered order of
 * items in a layout.
 *
 * N.B. This option is turned off by default.
 */

/**
 * A series of width helper classes that you can use to size things like grid
 * systems. Classes take a fraction-like format (e.g. `.u-2/3`). Use these in
 * your markup:
 *
 * <div class="u-7/12">
 *
 * The following will generate widths helper classes based on the fractions
 * defined in the `$inuit-fractions` list.
 */

.u-1\/1 {
  width: 100% !important;
}

.u-1\/2 {
  width: 50% !important;
}

.u-2\/2 {
  width: 100% !important;
}

.u-1\/3 {
  width: 33.33333333% !important;
}

.u-2\/3 {
  width: 66.66666667% !important;
}

.u-3\/3 {
  width: 100% !important;
}

.u-1\/4 {
  width: 25% !important;
}

.u-2\/4 {
  width: 50% !important;
}

.u-3\/4 {
  width: 75% !important;
}

.u-4\/4 {
  width: 100% !important;
}

.u-1\/5 {
  width: 20% !important;
}

.u-2\/5 {
  width: 40% !important;
}

.u-3\/5 {
  width: 60% !important;
}

.u-4\/5 {
  width: 80% !important;
}

.u-5\/5 {
  width: 100% !important;
}

/**
 * If we’re using Sass-MQ, automatically generate grid system(s) for each of our
 * defined breakpoints, and give them a Responsive Suffix, e.g.:
 *
 * <div class="u-3/12@mobile">
 */

@media (min-width: 20em) {
  .u-1\/1\@mobile {
    width: 100% !important;
  }

  .u-1\/2\@mobile {
    width: 50% !important;
  }

  .u-2\/2\@mobile {
    width: 100% !important;
  }

  .u-1\/3\@mobile {
    width: 33.33333333% !important;
  }

  .u-2\/3\@mobile {
    width: 66.66666667% !important;
  }

  .u-3\/3\@mobile {
    width: 100% !important;
  }

  .u-1\/4\@mobile {
    width: 25% !important;
  }

  .u-2\/4\@mobile {
    width: 50% !important;
  }

  .u-3\/4\@mobile {
    width: 75% !important;
  }

  .u-4\/4\@mobile {
    width: 100% !important;
  }

  .u-1\/5\@mobile {
    width: 20% !important;
  }

  .u-2\/5\@mobile {
    width: 40% !important;
  }

  .u-3\/5\@mobile {
    width: 60% !important;
  }

  .u-4\/5\@mobile {
    width: 80% !important;
  }

  .u-5\/5\@mobile {
    width: 100% !important;
  }
}

@media (min-width: 46.25em) {
  .u-1\/1\@tablet {
    width: 100% !important;
  }

  .u-1\/2\@tablet {
    width: 50% !important;
  }

  .u-2\/2\@tablet {
    width: 100% !important;
  }

  .u-1\/3\@tablet {
    width: 33.33333333% !important;
  }

  .u-2\/3\@tablet {
    width: 66.66666667% !important;
  }

  .u-3\/3\@tablet {
    width: 100% !important;
  }

  .u-1\/4\@tablet {
    width: 25% !important;
  }

  .u-2\/4\@tablet {
    width: 50% !important;
  }

  .u-3\/4\@tablet {
    width: 75% !important;
  }

  .u-4\/4\@tablet {
    width: 100% !important;
  }

  .u-1\/5\@tablet {
    width: 20% !important;
  }

  .u-2\/5\@tablet {
    width: 40% !important;
  }

  .u-3\/5\@tablet {
    width: 60% !important;
  }

  .u-4\/5\@tablet {
    width: 80% !important;
  }

  .u-5\/5\@tablet {
    width: 100% !important;
  }
}

@media (min-width: 61.25em) {
  .u-1\/1\@desktop {
    width: 100% !important;
  }

  .u-1\/2\@desktop {
    width: 50% !important;
  }

  .u-2\/2\@desktop {
    width: 100% !important;
  }

  .u-1\/3\@desktop {
    width: 33.33333333% !important;
  }

  .u-2\/3\@desktop {
    width: 66.66666667% !important;
  }

  .u-3\/3\@desktop {
    width: 100% !important;
  }

  .u-1\/4\@desktop {
    width: 25% !important;
  }

  .u-2\/4\@desktop {
    width: 50% !important;
  }

  .u-3\/4\@desktop {
    width: 75% !important;
  }

  .u-4\/4\@desktop {
    width: 100% !important;
  }

  .u-1\/5\@desktop {
    width: 20% !important;
  }

  .u-2\/5\@desktop {
    width: 40% !important;
  }

  .u-3\/5\@desktop {
    width: 60% !important;
  }

  .u-4\/5\@desktop {
    width: 80% !important;
  }

  .u-5\/5\@desktop {
    width: 100% !important;
  }
}

@media (min-width: 81.25em) {
  .u-1\/1\@wide {
    width: 100% !important;
  }

  .u-1\/2\@wide {
    width: 50% !important;
  }

  .u-2\/2\@wide {
    width: 100% !important;
  }

  .u-1\/3\@wide {
    width: 33.33333333% !important;
  }

  .u-2\/3\@wide {
    width: 66.66666667% !important;
  }

  .u-3\/3\@wide {
    width: 100% !important;
  }

  .u-1\/4\@wide {
    width: 25% !important;
  }

  .u-2\/4\@wide {
    width: 50% !important;
  }

  .u-3\/4\@wide {
    width: 75% !important;
  }

  .u-4\/4\@wide {
    width: 100% !important;
  }

  .u-1\/5\@wide {
    width: 20% !important;
  }

  .u-2\/5\@wide {
    width: 40% !important;
  }

  .u-3\/5\@wide {
    width: 60% !important;
  }

  .u-4\/5\@wide {
    width: 80% !important;
  }

  .u-5\/5\@wide {
    width: 100% !important;
  }
}

@media (min-width: 100em) {
  .u-1\/1\@u-wide {
    width: 100% !important;
  }

  .u-1\/2\@u-wide {
    width: 50% !important;
  }

  .u-2\/2\@u-wide {
    width: 100% !important;
  }

  .u-1\/3\@u-wide {
    width: 33.33333333% !important;
  }

  .u-2\/3\@u-wide {
    width: 66.66666667% !important;
  }

  .u-3\/3\@u-wide {
    width: 100% !important;
  }

  .u-1\/4\@u-wide {
    width: 25% !important;
  }

  .u-2\/4\@u-wide {
    width: 50% !important;
  }

  .u-3\/4\@u-wide {
    width: 75% !important;
  }

  .u-4\/4\@u-wide {
    width: 100% !important;
  }

  .u-1\/5\@u-wide {
    width: 20% !important;
  }

  .u-2\/5\@u-wide {
    width: 40% !important;
  }

  .u-3\/5\@u-wide {
    width: 60% !important;
  }

  .u-4\/5\@u-wide {
    width: 80% !important;
  }

  .u-5\/5\@u-wide {
    width: 100% !important;
  }
}

/* ==========================================================================
   #SPACINGS
   ========================================================================== */

/**
 * Utility classes to put specific spacing values onto elements. The below loop
 * will generate us a suite of classes like:
 *
 *   .u-margin-top {}
 *   .u-padding-left-large {}
 *   .u-margin-right-small {}
 *   .u-padding {}
 *   .u-padding-right-none {}
 *   .u-padding-horizontal {}
 *   .u-padding-vertical-small {}
 */

/* stylelint-disable string-quotes */

.u-padding {
  padding: 24px !important;
}

.u-padding-tiny {
  padding: 6px !important;
}

.u-padding-small {
  padding: 12px !important;
}

.u-padding-large {
  padding: 48px !important;
}

.u-padding-huge {
  padding: 96px !important;
}

.u-padding-none {
  padding: 0 !important;
}

.u-padding-top {
  padding-top: 24px !important;
}

.u-padding-top-tiny {
  padding-top: 6px !important;
}

.u-padding-top-small {
  padding-top: 12px !important;
}

.u-padding-top-large {
  padding-top: 48px !important;
}

.u-padding-top-huge {
  padding-top: 96px !important;
}

.u-padding-top-none {
  padding-top: 0 !important;
}

.u-padding-right {
  padding-right: 24px !important;
}

.u-padding-right-tiny {
  padding-right: 6px !important;
}

.u-padding-right-small {
  padding-right: 12px !important;
}

.u-padding-right-large {
  padding-right: 48px !important;
}

.u-padding-right-huge {
  padding-right: 96px !important;
}

.u-padding-right-none {
  padding-right: 0 !important;
}

.u-padding-bottom {
  padding-bottom: 24px !important;
}

.u-padding-bottom-tiny {
  padding-bottom: 6px !important;
}

.u-padding-bottom-small {
  padding-bottom: 12px !important;
}

.u-padding-bottom-large {
  padding-bottom: 48px !important;
}

.u-padding-bottom-huge {
  padding-bottom: 96px !important;
}

.u-padding-bottom-none {
  padding-bottom: 0 !important;
}

.u-padding-left {
  padding-left: 24px !important;
}

.u-padding-left-tiny {
  padding-left: 6px !important;
}

.u-padding-left-small {
  padding-left: 12px !important;
}

.u-padding-left-large {
  padding-left: 48px !important;
}

.u-padding-left-huge {
  padding-left: 96px !important;
}

.u-padding-left-none {
  padding-left: 0 !important;
}

.u-padding-horizontal {
  padding-left: 24px !important;
  padding-right: 24px !important;
}

.u-padding-horizontal-tiny {
  padding-left: 6px !important;
  padding-right: 6px !important;
}

.u-padding-horizontal-small {
  padding-left: 12px !important;
  padding-right: 12px !important;
}

.u-padding-horizontal-large {
  padding-left: 48px !important;
  padding-right: 48px !important;
}

.u-padding-horizontal-huge {
  padding-left: 96px !important;
  padding-right: 96px !important;
}

.u-padding-horizontal-none {
  padding-left: 0 !important;
  padding-right: 0 !important;
}

.u-padding-vertical {
  padding-top: 24px !important;
  padding-bottom: 24px !important;
}

.u-padding-vertical-tiny {
  padding-top: 6px !important;
  padding-bottom: 6px !important;
}

.u-padding-vertical-small {
  padding-top: 12px !important;
  padding-bottom: 12px !important;
}

.u-padding-vertical-large {
  padding-top: 48px !important;
  padding-bottom: 48px !important;
}

.u-padding-vertical-huge {
  padding-top: 96px !important;
  padding-bottom: 96px !important;
}

.u-padding-vertical-none {
  padding-top: 0 !important;
  padding-bottom: 0 !important;
}

.u-margin {
  margin: 24px !important;
}

.u-margin-tiny {
  margin: 6px !important;
}

.u-margin-small {
  margin: 12px !important;
}

.u-margin-large {
  margin: 48px !important;
}

.u-margin-huge {
  margin: 96px !important;
}

.u-margin-none {
  margin: 0 !important;
}

.u-margin-top {
  margin-top: 24px !important;
}

.u-margin-top-tiny {
  margin-top: 6px !important;
}

.u-margin-top-small {
  margin-top: 12px !important;
}

.u-margin-top-large {
  margin-top: 48px !important;
}

.u-margin-top-huge {
  margin-top: 96px !important;
}

.u-margin-top-none {
  margin-top: 0 !important;
}

.u-margin-right {
  margin-right: 24px !important;
}

.u-margin-right-tiny {
  margin-right: 6px !important;
}

.u-margin-right-small {
  margin-right: 12px !important;
}

.u-margin-right-large {
  margin-right: 48px !important;
}

.u-margin-right-huge {
  margin-right: 96px !important;
}

.u-margin-right-none {
  margin-right: 0 !important;
}

.u-margin-bottom {
  margin-bottom: 24px !important;
}

.u-margin-bottom-tiny {
  margin-bottom: 6px !important;
}

.u-margin-bottom-small {
  margin-bottom: 12px !important;
}

.u-margin-bottom-large {
  margin-bottom: 48px !important;
}

.u-margin-bottom-huge {
  margin-bottom: 96px !important;
}

.u-margin-bottom-none {
  margin-bottom: 0 !important;
}

.u-margin-left {
  margin-left: 24px !important;
}

.u-margin-left-tiny {
  margin-left: 6px !important;
}

.u-margin-left-small {
  margin-left: 12px !important;
}

.u-margin-left-large {
  margin-left: 48px !important;
}

.u-margin-left-huge {
  margin-left: 96px !important;
}

.u-margin-left-none {
  margin-left: 0 !important;
}

.u-margin-horizontal {
  margin-left: 24px !important;
  margin-right: 24px !important;
}

.u-margin-horizontal-tiny {
  margin-left: 6px !important;
  margin-right: 6px !important;
}

.u-margin-horizontal-small {
  margin-left: 12px !important;
  margin-right: 12px !important;
}

.u-margin-horizontal-large {
  margin-left: 48px !important;
  margin-right: 48px !important;
}

.u-margin-horizontal-huge {
  margin-left: 96px !important;
  margin-right: 96px !important;
}

.u-margin-horizontal-none {
  margin-left: 0 !important;
  margin-right: 0 !important;
}

.u-margin-vertical {
  margin-top: 24px !important;
  margin-bottom: 24px !important;
}

.u-margin-vertical-tiny {
  margin-top: 6px !important;
  margin-bottom: 6px !important;
}

.u-margin-vertical-small {
  margin-top: 12px !important;
  margin-bottom: 12px !important;
}

.u-margin-vertical-large {
  margin-top: 48px !important;
  margin-bottom: 48px !important;
}

.u-margin-vertical-huge {
  margin-top: 96px !important;
  margin-bottom: 96px !important;
}

.u-margin-vertical-none {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
}

/* stylelint-enable string-quotes */

/* ==========================================================================
   #RESPONSIVE-SPACINGS
   ========================================================================== */

/**
 * Utility classes enhancing the normal spacing classes by adding responsiveness
 * to them. By default this brings us the following classes:
 *
 *   .u-margin-bottom-none@mobile {}
 *   .u-margin-bottom-none@tablet {}
 *   .u-margin-bottom-none@desktop {}
 *   .u-margin-bottom-none@wide {}
 *
 * But we can affect the classes that get generated by altering the appropriate
 * Sass maps below.
 */

/* stylelint-disable max-nesting-depth */

@media (min-width: 20em) {
  .u-margin-bottom-none\@mobile {
    margin-bottom: 0 !important;
  }
}

@media (min-width: 46.25em) {
  .u-margin-bottom-none\@tablet {
    margin-bottom: 0 !important;
  }
}

@media (min-width: 61.25em) {
  .u-margin-bottom-none\@desktop {
    margin-bottom: 0 !important;
  }
}

@media (min-width: 81.25em) {
  .u-margin-bottom-none\@wide {
    margin-bottom: 0 !important;
  }
}

@media (min-width: 100em) {
  .u-margin-bottom-none\@u-wide {
    margin-bottom: 0 !important;
  }
}

/* stylelint-enable max-nesting-depth */

/* ==========================================================================
   #PRINT
   ========================================================================== */

/**
 * Very crude, reset-like styles taken from the HTML5 Boilerplate:
 * https://github.com/h5bp/html5-boilerplate/blob/5.3.0/dist/doc/css.md#print-styles
 * https://github.com/h5bp/html5-boilerplate/blob/master/dist/css/main.css#L205-L282
 */

@media print {
  /**
   * 1. Black prints faster: http://www.sanbeiji.com/archives/953
   */

  *,
  *:before,
  *:after,
  *:first-letter,
  *:first-line {
    background: transparent !important;
    color: #000 !important;
    /* [1] */
    -webkit-box-shadow: none !important;
            box-shadow: none !important;
    text-shadow: none !important;
  }

  a,
  a:visited {
    text-decoration: underline;
  }

  a[href]:after {
    content: " (" attr(href) ")";
  }

  abbr[title]:after {
    content: " (" attr(title) ")";
  }

  /**
   * Don't show links that are fragment identifiers, or use the `javascript:`
   * pseudo protocol.
   */

  a[href^="#"]:after,
  a[href^="javascript:"]:after {
    content: "";
  }

  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }

  /**
   * Printing Tables: http://css-discuss.incutio.com/wiki/Printing_Tables
   */

  thead {
    display: table-header-group;
  }

  tr,
  img {
    page-break-inside: avoid;
  }

  img {
    max-width: 100% !important;
  }

  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }

  h2,
  h3 {
    page-break-after: avoid;
  }
}

/* ==========================================================================
   #HIDE
   ========================================================================== */

/**
 * Hide only visually, but have it available for screen readers:
 * http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */

.u-hidden-visually {
  border: 0 !important;
  clip: rect(0 0 0 0) !important;
  -webkit-clip-path: inset(50%) !important;
          clip-path: inset(50%) !important;
  height: 1px !important;
  margin: -1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  white-space: nowrap !important;
  width: 1px !important;
}

/**
 * Hide visually and from screen readers.
 */

.u-hidden {
  display: none !important;
}

/* =======================
   Utilities/Hide Responsive
   ======================= */

@media (min-width: 20em) {
  .u-hidden\@mobile {
    display: none !important;
  }

  .u-shown\@mobile {
    display: inherit !important;
  }

  .u-display-block.u-shown\@mobile {
    display: block !important;
  }

  .u-display-inline-block.u-shown\@mobile {
    display: inline-block !important;
  }

  .u-display-inline.u-shown\@mobile {
    display: inline !important;
  }
}

@media (min-width: 46.25em) {
  .u-hidden\@tablet {
    display: none !important;
  }

  .u-shown\@tablet {
    display: inherit !important;
  }

  .u-display-block.u-shown\@tablet {
    display: block !important;
  }

  .u-display-inline-block.u-shown\@tablet {
    display: inline-block !important;
  }

  .u-display-inline.u-shown\@tablet {
    display: inline !important;
  }
}

@media (min-width: 61.25em) {
  .u-hidden\@desktop {
    display: none !important;
  }

  .u-shown\@desktop {
    display: inherit !important;
  }

  .u-display-block.u-shown\@desktop {
    display: block !important;
  }

  .u-display-inline-block.u-shown\@desktop {
    display: inline-block !important;
  }

  .u-display-inline.u-shown\@desktop {
    display: inline !important;
  }
}

@media (min-width: 81.25em) {
  .u-hidden\@wide {
    display: none !important;
  }

  .u-shown\@wide {
    display: inherit !important;
  }

  .u-display-block.u-shown\@wide {
    display: block !important;
  }

  .u-display-inline-block.u-shown\@wide {
    display: inline-block !important;
  }

  .u-display-inline.u-shown\@wide {
    display: inline !important;
  }
}

@media (min-width: 100em) {
  .u-hidden\@u-wide {
    display: none !important;
  }

  .u-shown\@u-wide {
    display: inherit !important;
  }

  .u-display-block.u-shown\@u-wide {
    display: block !important;
  }

  .u-display-inline-block.u-shown\@u-wide {
    display: inline-block !important;
  }

  .u-display-inline.u-shown\@u-wide {
    display: inline !important;
  }
}

/* =======================
   Utilities/Constrain
   ======================= */

.u-constrain--huge {
  max-width: 1400px;
}

.u-constrain--large {
  max-width: 1280px;
}

.u-constrain {
  max-width: 1024px;
}

.u-constrain--small {
  max-width: 768px;
}

.u-constrain--tiny {
  max-width: 600px;
}

/* =======================
   Utilities/Flex
   ======================= */

.u-flex {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.u-flex--center {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.u-flex--right {
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end;
}

.u-flex--center-middle {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.u-flex--bottom {
  -webkit-box-align: end;
      -ms-flex-align: end;
          align-items: flex-end;
}

/* =======================
   Shame
   ======================= */


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/